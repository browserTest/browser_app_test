{
  "uid" : "1adfc9a89f8f4d7e",
  "name" : "test002PrivacyDisagree",
  "fullName" : "browser.browser_test.test_PubMethod.TestPubMethod#test002PrivacyDisagree",
  "historyId" : "c2d6fe22f52bb4fc0688175459d01c5d",
  "time" : {
    "start" : 1577352052942,
    "stop" : 1577352061839,
    "duration" : 8897
  },
  "description" : "\n        1、清除数据后首次打开浏览器，弹出隐私政策窗口\n        2、点击“不同意”，退出\n        ",
  "descriptionHtml" : "<pre><code>    1、清除数据后首次打开浏览器，弹出隐私政策窗口\n    2、点击“不同意”，退出\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 断言元素存在失败，元素名称为： com.meizu.flyme.launcher:id/app_icon",
  "statusTrace" : "self = <browser_test.test_PubMethod.TestPubMethod object at 0x000000000507C6D8>\npubMethod_init = None\n\n    @allure.story('测试隐私弹窗不同意按钮')\n    def test002PrivacyDisagree(self, pubMethod_init):\n        '''\n        1、清除数据后首次打开浏览器，弹出隐私政策窗口\n        2、点击“不同意”，退出\n        '''\n    \n        # 清除数据后首次进入浏览器，点击隐私弹窗不同意按钮\n        self.pubmethod.clickPrivacyDisagree()\n>       self.base.assertTrue(LAUNCHER_ID, timeout=5)\n\nbrowser\\browser_test\\test_PubMethod.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base_function.base.Base object at 0x00000000050CA550>\nelement = 'com.meizu.flyme.launcher:id/app_icon', mark = True, timeout = 5\n\n    def assertTrue(self, element, mark = True, timeout = 5):\n        '''\n        :param element: 元素名称\n        :param timeout: 超时时间\n        :param mark: 判断元素是否存在，默认为True，如判断元素不存在，则必须传False\n        :return:\n        '''\n        sleep(2)\n        if mark:\n>           assert self.elementIsExit(element, timeout) == True, \"断言元素存在失败，元素名称为： {}\".format(element)\nE           AssertionError: 断言元素存在失败，元素名称为： com.meizu.flyme.launcher:id/app_icon\n\nbase_function\\base.py:176: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "driver_setup",
    "time" : {
      "start" : 1577352045555,
      "stop" : 1577352047555,
      "duration" : 2000
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "cmdopt",
    "time" : {
      "start" : 1577352045554,
      "stop" : 1577352045554,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "pubMethod_init",
    "time" : {
      "start" : 1577352047555,
      "stop" : 1577352052940,
      "duration" : 5385
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        1、清除数据后首次打开浏览器，弹出隐私政策窗口\n        2、点击“不同意”，退出\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: 断言元素存在失败，元素名称为： com.meizu.flyme.launcher:id/app_icon",
    "statusTrace" : "self = <browser_test.test_PubMethod.TestPubMethod object at 0x000000000507C6D8>\npubMethod_init = None\n\n    @allure.story('测试隐私弹窗不同意按钮')\n    def test002PrivacyDisagree(self, pubMethod_init):\n        '''\n        1、清除数据后首次打开浏览器，弹出隐私政策窗口\n        2、点击“不同意”，退出\n        '''\n    \n        # 清除数据后首次进入浏览器，点击隐私弹窗不同意按钮\n        self.pubmethod.clickPrivacyDisagree()\n>       self.base.assertTrue(LAUNCHER_ID, timeout=5)\n\nbrowser\\browser_test\\test_PubMethod.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base_function.base.Base object at 0x00000000050CA550>\nelement = 'com.meizu.flyme.launcher:id/app_icon', mark = True, timeout = 5\n\n    def assertTrue(self, element, mark = True, timeout = 5):\n        '''\n        :param element: 元素名称\n        :param timeout: 超时时间\n        :param mark: 判断元素是否存在，默认为True，如判断元素不存在，则必须传False\n        :return:\n        '''\n        sleep(2)\n        if mark:\n>           assert self.elementIsExit(element, timeout) == True, \"断言元素存在失败，元素名称为： {}\".format(element)\nE           AssertionError: 断言元素存在失败，元素名称为： com.meizu.flyme.launcher:id/app_icon\n\nbase_function\\base.py:176: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "31c0723097bcc4a1",
      "name" : "失败截图",
      "source" : "31c0723097bcc4a1.jpg",
      "type" : "image/jpg",
      "size" : 137809
    }, {
      "uid" : "7edf17ca56807db6",
      "name" : "log",
      "source" : "7edf17ca56807db6.txt",
      "type" : "text/plain",
      "size" : 669
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "pubMethod_init::0",
    "time" : {
      "start" : 1577352062455,
      "stop" : 1577352062455,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "测试隐私弹窗不同意按钮"
  }, {
    "name" : "feature",
    "value" : "测试启动弹框"
  }, {
    "name" : "parentSuite",
    "value" : "browser.browser_test"
  }, {
    "name" : "suite",
    "value" : "test_PubMethod"
  }, {
    "name" : "subSuite",
    "value" : "TestPubMethod"
  }, {
    "name" : "host",
    "value" : "EF-LIUDAWEI2"
  }, {
    "name" : "thread",
    "value" : "5648-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "browser.browser_test.test_PubMethod"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "1adfc9a89f8f4d7e.json",
  "parameterValues" : [ ]
}