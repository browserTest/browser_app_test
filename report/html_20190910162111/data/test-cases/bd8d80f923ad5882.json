{
  "uid" : "bd8d80f923ad5882",
  "name" : "test003MorePage",
  "fullName" : "browser.browser_test.test_MorePage.TestMorePage#test003MorePage",
  "historyId" : "9347f73df920b68f4a34bea7fbc4e751",
  "time" : {
    "start" : 1568103671825,
    "stop" : 1568103671825,
    "duration" : 0
  },
  "description" : "\n        1、在浏览器首页点击导航栏中\"更多\"按钮，进入到浏览器网址导航页面\n        2、点击\"搜狐\"\n        3、断言是否跳转到\"搜狐\"页面\n\n        ",
  "descriptionHtml" : "<pre><code>    1、在浏览器首页点击导航栏中&quot;更多&quot;按钮，进入到浏览器网址导航页面\n    2、点击&quot;搜狐&quot;\n    3、断言是否跳转到&quot;搜狐&quot;页面\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "uiautomator2.exceptions.JsonRpcError: -32601 Method not found: <method not found> data: , method: runWatchersOnWindowsChange",
  "statusTrace" : "request = <SubRequest 'driver_setup' for <Function test003MorePage>>\ncmdopt = '172.18.8.146'\n\n    @pytest.fixture()\n    def driver_setup(request, cmdopt):\n        logging.info('————————————开始执行自动化测试——————————————————')\n        # 获取到driver对象\n        global driver1\n        driver1 = Driver().driver_init(cmdopt)\n        request.instance.driver = Driver().driver_init(cmdopt)\n        # 启动监听器\n>       driver1.watchers.watched = True\n\nconftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\session.py:622: in watched\n    obj.server.jsonrpc.runWatchersOnWindowsChange(b)\nC:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py:415: in __call__\n    params, http_timeout)\nC:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py:422: in jsonrpc_retry_call\n    return self.jsonrpc_call(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = uiautomator2 object for 172.18.8.146:7912\njsonrpc_url = 'http://172.18.8.146:7912/jsonrpc/0'\nmethod = 'runWatchersOnWindowsChange', params = (True,), http_timeout = 60\n\n    def jsonrpc_call(self, jsonrpc_url, method, params=[], http_timeout=60):\n        \"\"\" jsonrpc2 call\n        Refs:\n            - http://www.jsonrpc.org/specification\n        \"\"\"\n        request_start = time.time()\n        data = {\n            \"jsonrpc\": \"2.0\",\n            \"id\": self._jsonrpc_id(method),\n            \"method\": method,\n            \"params\": params,\n        }\n        data = json.dumps(data).encode('utf-8')\n        res = self._reqsess.post(\n            jsonrpc_url,  # +\"?m=\"+method, #?method is for debug\n            headers={\"Content-Type\": \"application/json\"},\n            timeout=http_timeout,\n            data=data)\n        if DEBUG:\n            print(\"Shell$ curl -X POST -d '{}' {}\".format(data, jsonrpc_url))\n            print(\"Output> \" + res.text)\n        if res.status_code == 502:\n            raise GatewayError(\n                res, \"gateway error, time used %.1fs\" %\n                (time.time() - request_start))\n        if res.status_code == 410:  # http status gone: session broken\n            raise SessionBrokenError(\"app quit or crash\", jsonrpc_url,\n                                     res.text)\n        if res.status_code != 200:\n            raise UiaError(jsonrpc_url, data, res.status_code, res.text,\n                           \"HTTP Return code is not 200\", res.text)\n        jsondata = res.json()\n        error = jsondata.get('error')\n        if not error:\n            return jsondata.get('result')\n    \n        # error happends\n        err = JsonRpcError(error, method)\n    \n        if isinstance(\n                err.data,\n                six.string_types) and 'UiAutomation not connected' in err.data:\n            err.__class__ = UiAutomationNotConnectedError\n        elif err.message:\n            if 'uiautomator.UiObjectNotFoundException' in err.message:\n                err.__class__ = UiObjectNotFoundError\n            elif 'android.support.test.uiautomator.StaleObjectException' in err.message:\n                # StaleObjectException\n                # https://developer.android.com/reference/android/support/test/uiautomator/StaleObjectException.html\n                # A StaleObjectException exception is thrown when a UiObject2 is used after the underlying View has been destroyed.\n                # In this case, it is necessary to call findObject(BySelector) to obtain a new UiObject2 instance.\n                err.__class__ = StaleObjectExceptionError\n            elif 'java.lang.NullObjectException' in err.message:\n                err.__class__ = NullObjectExceptionError\n            elif 'java.lang.NullPointerException' == err.message:\n                err.__class__ = NullPointerExceptionError\n>       raise err\nE       uiautomator2.exceptions.JsonRpcError: -32601 Method not found: <method not found> data: , method: runWatchersOnWindowsChange\n\nC:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py:504: JsonRpcError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "cmdopt",
    "time" : {
      "start" : 1568103671827,
      "stop" : 1568103671827,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "driver_setup",
    "time" : {
      "start" : 1568103671827,
      "stop" : 1568103674021,
      "duration" : 2194
    },
    "status" : "broken",
    "statusMessage" : "uiautomator2.exceptions.JsonRpcError: -32601 Method not found: <method not found> data: , method: runWatchersOnWindowsChange\n",
    "statusTrace" : "  File \"C:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\_pytest\\fixtures.py\", line 923, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\_pytest\\fixtures.py\", line 783, in call_fixture_func\n    res = fixturefunc(**kwargs)\n  File \"D:\\browser_dwliuc\\conftest.py\", line 31, in driver_setup\n    driver1.watchers.watched = True\n  File \"C:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\session.py\", line 622, in watched\n    obj.server.jsonrpc.runWatchersOnWindowsChange(b)\n  File \"C:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py\", line 415, in __call__\n    params, http_timeout)\n  File \"C:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py\", line 422, in jsonrpc_retry_call\n    return self.jsonrpc_call(*args, **kwargs)\n  File \"C:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py\", line 504, in jsonrpc_call\n    raise err\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  } ],
  "testStage" : {
    "description" : "\n        1、在浏览器首页点击导航栏中\"更多\"按钮，进入到浏览器网址导航页面\n        2、点击\"搜狐\"\n        3、断言是否跳转到\"搜狐\"页面\n\n        ",
    "status" : "broken",
    "statusMessage" : "uiautomator2.exceptions.JsonRpcError: -32601 Method not found: <method not found> data: , method: runWatchersOnWindowsChange",
    "statusTrace" : "request = <SubRequest 'driver_setup' for <Function test003MorePage>>\ncmdopt = '172.18.8.146'\n\n    @pytest.fixture()\n    def driver_setup(request, cmdopt):\n        logging.info('————————————开始执行自动化测试——————————————————')\n        # 获取到driver对象\n        global driver1\n        driver1 = Driver().driver_init(cmdopt)\n        request.instance.driver = Driver().driver_init(cmdopt)\n        # 启动监听器\n>       driver1.watchers.watched = True\n\nconftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\session.py:622: in watched\n    obj.server.jsonrpc.runWatchersOnWindowsChange(b)\nC:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py:415: in __call__\n    params, http_timeout)\nC:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py:422: in jsonrpc_retry_call\n    return self.jsonrpc_call(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = uiautomator2 object for 172.18.8.146:7912\njsonrpc_url = 'http://172.18.8.146:7912/jsonrpc/0'\nmethod = 'runWatchersOnWindowsChange', params = (True,), http_timeout = 60\n\n    def jsonrpc_call(self, jsonrpc_url, method, params=[], http_timeout=60):\n        \"\"\" jsonrpc2 call\n        Refs:\n            - http://www.jsonrpc.org/specification\n        \"\"\"\n        request_start = time.time()\n        data = {\n            \"jsonrpc\": \"2.0\",\n            \"id\": self._jsonrpc_id(method),\n            \"method\": method,\n            \"params\": params,\n        }\n        data = json.dumps(data).encode('utf-8')\n        res = self._reqsess.post(\n            jsonrpc_url,  # +\"?m=\"+method, #?method is for debug\n            headers={\"Content-Type\": \"application/json\"},\n            timeout=http_timeout,\n            data=data)\n        if DEBUG:\n            print(\"Shell$ curl -X POST -d '{}' {}\".format(data, jsonrpc_url))\n            print(\"Output> \" + res.text)\n        if res.status_code == 502:\n            raise GatewayError(\n                res, \"gateway error, time used %.1fs\" %\n                (time.time() - request_start))\n        if res.status_code == 410:  # http status gone: session broken\n            raise SessionBrokenError(\"app quit or crash\", jsonrpc_url,\n                                     res.text)\n        if res.status_code != 200:\n            raise UiaError(jsonrpc_url, data, res.status_code, res.text,\n                           \"HTTP Return code is not 200\", res.text)\n        jsondata = res.json()\n        error = jsondata.get('error')\n        if not error:\n            return jsondata.get('result')\n    \n        # error happends\n        err = JsonRpcError(error, method)\n    \n        if isinstance(\n                err.data,\n                six.string_types) and 'UiAutomation not connected' in err.data:\n            err.__class__ = UiAutomationNotConnectedError\n        elif err.message:\n            if 'uiautomator.UiObjectNotFoundException' in err.message:\n                err.__class__ = UiObjectNotFoundError\n            elif 'android.support.test.uiautomator.StaleObjectException' in err.message:\n                # StaleObjectException\n                # https://developer.android.com/reference/android/support/test/uiautomator/StaleObjectException.html\n                # A StaleObjectException exception is thrown when a UiObject2 is used after the underlying View has been destroyed.\n                # In this case, it is necessary to call findObject(BySelector) to obtain a new UiObject2 instance.\n                err.__class__ = StaleObjectExceptionError\n            elif 'java.lang.NullObjectException' in err.message:\n                err.__class__ = NullObjectExceptionError\n            elif 'java.lang.NullPointerException' == err.message:\n                err.__class__ = NullPointerExceptionError\n>       raise err\nE       uiautomator2.exceptions.JsonRpcError: -32601 Method not found: <method not found> data: , method: runWatchersOnWindowsChange\n\nC:\\Users\\liudawei.MEIZU\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\uiautomator2\\__init__.py:504: JsonRpcError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bfe74a7dea7a92f8",
      "name" : "log",
      "source" : "bfe74a7dea7a92f8.txt",
      "type" : "text/plain",
      "size" : 146
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "魅族浏览器网址导航页面测试"
  }, {
    "name" : "story",
    "value" : "测试网址导航页面搜狐跳转"
  }, {
    "name" : "tag",
    "value" : "P1"
  }, {
    "name" : "parentSuite",
    "value" : "browser.browser_test"
  }, {
    "name" : "suite",
    "value" : "test_MorePage"
  }, {
    "name" : "subSuite",
    "value" : "TestMorePage"
  }, {
    "name" : "host",
    "value" : "EF-LIUDAWEI2"
  }, {
    "name" : "thread",
    "value" : "15312-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "browser.browser_test.test_MorePage"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "P1" ]
  },
  "source" : "bd8d80f923ad5882.json",
  "parameterValues" : [ ]
}